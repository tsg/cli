name: build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event.action != 'labeled'
    steps:
    - uses: actions/checkout@v2

    - name: Configure sysctl limits
      run: |
        sudo swapoff -a
        sudo sysctl -w vm.swappiness=1
        sudo sysctl -w fs.file-max=262144
        sudo sysctl -w vm.max_map_count=262144

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Add Go environment variables
      env:
        GOPATH: "/home/runner/go"
      run: |
        echo "GOPATH=${{ env.GOPATH }}" >> $GITHUB_ENV
        echo "GOMODCACHE=${{ env.GOPATH }}/pkg/mod" >> $GITHUB_ENV
        echo "GOBIN=${{ env.GOPATH }}/bin" >> $GITHUB_ENV

    - name: Print Environment
      run: env

    - name: Cache module dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-go-modules
      with:
        path: "${{ env.GOMODCACHE }}"
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Tools
      uses: actions/cache@v2
      env:
        cache-name: cache-tool-binaries
      with:
        path: ${{ env.GOBIN }}
        key: ${{ runner.os }}-go-tools-${{ hashFiles('.bingo/*.mod') }}

    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}

    - name: Build
      run: go build .

    - name: Check/Lint repository
      run: make check

    - name: Run tests
      run: make test

  # We want to release all merges to main for now:
  release:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - run: git config --global user.email "github@xata.io"
    - run: git config --global user.name "Github actions"

    - name: Release new version
      run: |
        echo y | ./scripts/bump_version.sh
